services:
  api:
    build:
      context: .
      dockerfile: API.partonair/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - USE_DOCKER_CONFIG=true
      - ConnectionStrings__DefaultConnection=Server=db;Database=partonair;User=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;Encrypt=False;MultipleActiveResultSets=True
    depends_on:
      db:
        condition: service_healthy
    networks:
      - partonair-network
    restart: unless-stopped


  db:
    build:
      context: ./Database.partonair
      dockerfile: Dockerfile
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - db-data:/var/opt/mssql
      - ./Database.partonair/Scripts:/scripts
    networks:
      - partonair-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong@Passw0rd" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 20s
    restart: unless-stopped


  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true
    networks:
      - partonair-network
    restart: unless-stopped


  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - partonair-network
    restart: unless-stopped


networks:
  partonair-network:
    driver: bridge


volumes:
  db-data:
  loki-data:
  grafana-data: